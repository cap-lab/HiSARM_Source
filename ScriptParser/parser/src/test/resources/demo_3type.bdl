{
    Searcher: Burger burger
    Assistant: Tank tank
    Guard: Waffle waffle
}

Main.Searcher {
    case(REMOTE_CONTROL):
        catch(START): mode = SEARCH
        catch(FINISH): mode = FINISH
    case(SEARCH):
        catch(REMOTE_CONTROL): mode = REMOTE_CONTROL
        catch(HIDE): mode = HIDE
        catch(FINISH): mode = FINISH
    case(HIDE):
        catch(REMOTE_CONTROL): mode = REMOTE_CONTROL
        catch(RESTART): mode = SEARCH
    default: mode = REMOTE_CONTROL
}

Main.Assistant {
    case(REMOTE_CONTROL):
        catch(START): mode = FOLLOW
        catch(FINISH): mode = FINISH
    case(FOLLOW):
        catch(REMOTE_CONTROL): mode = REMOTE_CONTROL
        catch(HIDE): mode = COVER
        catch(FINISH): mode = FINISH
    case(COVER):
        catch(REMOTE_CONTROL): mode = REMOTE_CONTROL
        catch(RESTART): mode = FOLLOW
    default: mode = REMOTE_CONTROL
}

Main.Guard {
    case(REMOTE_CONTROL):
        catch(START): mode = OBSERVE
        catch(FINISH): mode = FINISH
    case(OBSERVE):
        catch(HIDE): mode = GUARD
        catch(FINISH): mode = FINISH
    case(GUARD):
        catch(REMOTE_CONTROL): mode = REMOTE_CONTROL
        catch(RESTART): mode = OBSERVE
    default: mode = REMOTE_CONTROL
}

Mode.REMOTE_CONTROL {
    services:
        RemoteControl
        SendImageToOperator
        ReceiveCommandFromOperator
}

Mode.SEARCH {
    services:
        Search("YELLOW")
        ListenAlarmFrom("Guard")
        ReceiveCommandFromOperator
}

Mode.HIDE {
    services:
        Hide
        ListenAlarmFrom("Guard")
        ReceiveCommandFromOperator
}

Mode.FOLLOW {
    services:
        Follow
        ListenAlarmFrom("Guard")
        ReceiveCommandFromOperator
}

Mode.COVER {
    services:
        Attack
        ListenAlarmFrom("Guard")
        ReceiveCommandFromOperator
}

Mode.OBSERVE {
    services:
        ObserveAndShareWith("Searcher", "Assistant")
        ReceiveCommandFromOperator
}

Mode.GUARD {
    services:
        TurnOffAlarmOn("Searcher", "Assistant")
        Attack
        ReceiveCommandFromOperator
}

RemoteControl {
    remoteControl()
}

ReceiveCommandFromOperator {
    cmd = getModeTrasferCommand()
    if (cmd == "RC"){
        throw REMOTE_CONTROL 
    } else if (cmd == "START") {
        throw START 
    } else if (cmd == "FINISH") {
        throw FINISH 
    }
} 

SendImageToOperator {
    sendImageToOperator()
}

Search(target) {
    isFound = search(target)
    if (isFound == "TRUE") {
        throw FINISH 
    }
} repeat(200 MSEC)

Hide {
    hide()
} 

Follow {
    follow()
} 

Attack {
    attack()
} 

ObserveAndShareWith(receiver1, receiver2) {
    isEnemy = checkEnemy()
    if (isEnemy == "TRUE") {
        send(receiver1, isEnemy)
        send(receiver2, isEnemy)
        throw HIDE 
    }
} repeat(200 MSEC)

TurnOffAlarmOn(receiver1, receiver2) {
    isEnemy = checkEnemy()
    if (isEnemy == "FALSE") {
        send(receiver1, isEnemy)
        send(receiver2, isEnemy)
        throw RESTART 
    }
} repeat(200 MSEC)

ListenAlarmFrom(sender) {
    isEnemy = receive(sender, isEnemy)
    if (isEnemy == "TRUE") {
        throw HIDE 
    }
    if (isEnemy == "FALSE") {
        throw RESTART 
    }
} 
